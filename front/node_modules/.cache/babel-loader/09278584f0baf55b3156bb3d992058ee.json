{"ast":null,"code":"import _slicedToArray from \"/home/fuencode/Documents/WildCodeSchool/checkpoint/Wild_Circus_2.0/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fuencode/Documents/WildCodeSchool/checkpoint/Wild_Circus_2.0/front/src/components/ChatPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './ChatPage.css';\nimport Axios from 'axios';\nimport BgGlitch from './BgGlitch';\nimport { AuthContext } from './auth/Auth';\n\nconst ChatPage = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmit = _useState4[0],\n        setIsSubmit = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hour = _useState6[0],\n        setHour = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const dataUser = React.useContext(AuthContext);\n  const pseudo = dataUser && dataUser.userInfo && dataUser.userInfo.pseudo;\n  let date = new Date();\n  let annee = date.getFullYear();\n  let mois = date.getMonth() + 1;\n  let jour = date.getDate();\n  let heure = date.getHours();\n  let minute = date.getMinutes();\n  useEffect(() => {\n    Axios.get('http://localhost:5000/api/chat').then(response => response.data).then(data => setMessages(data));\n  }, []);\n\n  const postMessage = () => {\n    setHour(heure + \":\" + minute);\n    setDate;\n    Axios.post('http://localhost:5000/api/chat', {\n      pseudo: pseudo,\n      date\n    }).then(setIsSubmit(true));\n  };\n\n  console.log(messages);\n  return React.createElement(\"div\", {\n    className: \"ChatPage_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ChatPage_BgGlitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(BgGlitch, {\n    title: \"MADE BY FUENCORE\",\n    glitch: \"WILD_CHAT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ChatPage_read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, messages.map(x => React.createElement(\"div\", {\n    className: \"ChatPage_read_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ChatPage_read_container_info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"ChatPage_read_container_pseudo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, x.pseudo), React.createElement(\"p\", {\n    className: \"ChatPage_read_container_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, x.date)), React.createElement(\"div\", {\n    className: \"ChatPage_read_container_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"ChatPage_read_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, x.message))))), React.createElement(\"div\", {\n    className: \"ChatPage_write\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"ChatPage_textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"sumbit\",\n    className: \"ChatPage_sendbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/fuencode/Documents/WildCodeSchool/checkpoint/Wild_Circus_2.0/front/src/components/ChatPage.jsx"],"names":["React","useState","useEffect","Axios","BgGlitch","AuthContext","ChatPage","messages","setMessages","isSubmit","setIsSubmit","hour","setHour","message","setMessage","dataUser","useContext","pseudo","userInfo","date","Date","annee","getFullYear","mois","getMonth","jour","getDate","heure","getHours","minute","getMinutes","get","then","response","data","postMessage","setDate","post","console","log","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ChatPage.css';\nimport Axios from 'axios';\nimport BgGlitch from './BgGlitch';\nimport { AuthContext } from './auth/Auth';\n\nconst ChatPage = () => {\n\tconst [ messages, setMessages ] = useState([]);\n\tconst [ isSubmit, setIsSubmit ] = useState(false);\n\tconst [ hour, setHour ] = useState();\n\tconst [ message, setMessage ] = useState();\n\n\tconst dataUser = React.useContext(AuthContext);\n\n    const pseudo = dataUser && dataUser.userInfo && dataUser.userInfo.pseudo;\n\n\tlet date = new Date();\n\tlet annee = date.getFullYear();\n\tlet mois = date.getMonth() + 1;\n\tlet jour = date.getDate();\n\tlet heure = date.getHours();\n\tlet minute = date.getMinutes();\n\n\tuseEffect(() => {\n\t\tAxios.get('http://localhost:5000/api/chat').then((response) => response.data).then((data) => setMessages(data));\n\t}, []);\n\n\tconst postMessage = () => {\n        setHour(heure + \":\" + minute)\n        setDate\n\t\tAxios.post('http://localhost:5000/api/chat', {\n\t\t\tpseudo: pseudo,\n\t\t\tdate\n\t\t}).then(setIsSubmit(true));\n\t};\n\n\tconsole.log(messages);\n\n\treturn (\n\t\t<div className=\"ChatPage_container\">\n\t\t\t<div className=\"ChatPage_BgGlitch\">\n\t\t\t\t<BgGlitch title=\"MADE BY FUENCORE\" glitch=\"WILD_CHAT\" />\n\t\t\t</div>\n\t\t\t<div className=\"ChatPage_read\">\n\t\t\t\t{messages.map((x) => (\n\t\t\t\t\t<div className=\"ChatPage_read_container\">\n\t\t\t\t\t\t<div className=\"ChatPage_read_container_info\">\n\t\t\t\t\t\t\t<p className=\"ChatPage_read_container_pseudo\">{x.pseudo}</p>\n\t\t\t\t\t\t\t<p className=\"ChatPage_read_container_date\">{x.date}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ChatPage_read_container_message\">\n\t\t\t\t\t\t\t<p className=\"ChatPage_read_message\">{x.message}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"ChatPage_write\">\n\t\t\t\t<textarea type=\"text\" className=\"ChatPage_textarea\" />\n\t\t\t\t<button type=\"sumbit\" className=\"ChatPage_sendbutton\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}