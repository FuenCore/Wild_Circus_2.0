{"ast":null,"code":"var _jsxFileName = \"/home/fuencode/Documents/WildCodeSchool/checkpoint/Wild_Circus_2.0/front/src/components/BgMatrix.jsx\";\nimport React from \"react\";\n\nconst BgMatrix = () => {\n  const C = document.querySelector(\"canvas\"),\n        $ = C.getContext(\"2d\"),\n        W = C.width = window.innerWidth,\n        H = C.height = window.innerHeight;\n  const str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$\",\n        matrix = str.split(\"\");\n  let font = 11,\n      col = W / font,\n      arr = [];\n\n  for (let i = 0; i < col; i++) arr[i] = 1;\n\n  function draw() {\n    $.fillStyle = \"rgba(0,0,0,.05)\";\n    $.fillRect(0, 0, W, H);\n    $.fillStyle = \"#0f0\";\n    $.font = font + \"px system-ui\";\n\n    for (let i = 0; i < arr.length; i++) {\n      let txt = matrix[Math.floor(Math.random() * matrix.length)];\n      $.fillText(txt, i * font, arr[i] * font);\n      if (arr[i] * font > H && Math.random() > 0.975) arr[i] = 0;\n      arr[i]++;\n    }\n  }\n\n  setInterval(draw, 123);\n  window.addEventListener(\"resize\", () => location.reload());\n  return React.createElement(\"div\", {\n    className: \"BgMatrix_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default BgMatrix;","map":{"version":3,"sources":["/home/fuencode/Documents/WildCodeSchool/checkpoint/Wild_Circus_2.0/front/src/components/BgMatrix.jsx"],"names":["React","BgMatrix","C","document","querySelector","$","getContext","W","width","window","innerWidth","H","height","innerHeight","str","matrix","split","font","col","arr","i","draw","fillStyle","fillRect","length","txt","Math","floor","random","fillText","setInterval","addEventListener","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AAAA,QACAC,CAAC,GAAGH,CAAC,CAACI,UAAF,CAAa,IAAb,CADJ;AAAA,QAEAC,CAAC,GAAIL,CAAC,CAACM,KAAF,GAAUC,MAAM,CAACC,UAFtB;AAAA,QAGAC,CAAC,GAAIT,CAAC,CAACU,MAAF,GAAWH,MAAM,CAACI,WAHvB;AAKF,QAAMC,GAAG,GAAG,uCAAZ;AAAA,QACEC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,EAAV,CADX;AAGA,MAAIC,IAAI,GAAG,EAAX;AAAA,MACEC,GAAG,GAAGX,CAAC,GAAGU,IADZ;AAAA,MAEEE,GAAG,GAAG,EAFR;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8BD,GAAG,CAACC,CAAD,CAAH,GAAS,CAAT;;AAE9B,WAASC,IAAT,GAAgB;AACdhB,IAAAA,CAAC,CAACiB,SAAF,GAAc,iBAAd;AACAjB,IAAAA,CAAC,CAACkB,QAAF,CAAW,CAAX,EAAc,CAAd,EAAiBhB,CAAjB,EAAoBI,CAApB;AACAN,IAAAA,CAAC,CAACiB,SAAF,GAAc,MAAd;AACAjB,IAAAA,CAAC,CAACY,IAAF,GAASA,IAAI,GAAG,cAAhB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACK,MAAxB,EAAgCJ,CAAC,EAAjC,EAAqC;AACnC,UAAIK,GAAG,GAAGV,MAAM,CAACW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,MAAM,CAACS,MAAlC,CAAD,CAAhB;AACAnB,MAAAA,CAAC,CAACwB,QAAF,CAAWJ,GAAX,EAAgBL,CAAC,GAAGH,IAApB,EAA0BE,GAAG,CAACC,CAAD,CAAH,GAASH,IAAnC;AACA,UAAIE,GAAG,CAACC,CAAD,CAAH,GAASH,IAAT,GAAgBN,CAAhB,IAAqBe,IAAI,CAACE,MAAL,KAAgB,KAAzC,EAAgDT,GAAG,CAACC,CAAD,CAAH,GAAS,CAAT;AAChDD,MAAAA,GAAG,CAACC,CAAD,CAAH;AACD;AACF;;AAEDU,EAAAA,WAAW,CAACT,IAAD,EAAO,GAAP,CAAX;AAEAZ,EAAAA,MAAM,CAACsB,gBAAP,CAAwB,QAAxB,EAAkC,MAAMC,QAAQ,CAACC,MAAT,EAAxC;AAGE,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAvCD;;AAyCA,eAAehC,QAAf","sourcesContent":["import React from \"react\";\n\nconst BgMatrix = () => {\n\n    const C = document.querySelector(\"canvas\"),\n    $ = C.getContext(\"2d\"),\n    W = (C.width = window.innerWidth),\n    H = (C.height = window.innerHeight);\n  \n  const str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$\",\n    matrix = str.split(\"\");\n  \n  let font = 11,\n    col = W / font,\n    arr = [];\n  \n  for (let i = 0; i < col; i++) arr[i] = 1;\n  \n  function draw() {\n    $.fillStyle = \"rgba(0,0,0,.05)\";\n    $.fillRect(0, 0, W, H);\n    $.fillStyle = \"#0f0\";\n    $.font = font + \"px system-ui\";\n    for (let i = 0; i < arr.length; i++) {\n      let txt = matrix[Math.floor(Math.random() * matrix.length)];\n      $.fillText(txt, i * font, arr[i] * font);\n      if (arr[i] * font > H && Math.random() > 0.975) arr[i] = 0;\n      arr[i]++;\n    }\n  }\n  \n  setInterval(draw, 123);\n  \n  window.addEventListener(\"resize\", () => location.reload());\n  \n\n    return(\n        <div className=\"BgMatrix_container\">\n            <canvas></canvas>\n        </div>\n    )\n}\n\nexport default BgMatrix;"]},"metadata":{},"sourceType":"module"}